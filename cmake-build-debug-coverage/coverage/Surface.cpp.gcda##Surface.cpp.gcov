        -:    0:Source:/home/kaappo/git/raytracercpp/src/core/geometry/Surface.cpp
        -:    0:Graph:/home/kaappo/git/raytracercpp/cmake-build-debug-coverage/CMakeFiles/Main.dir/src/core/geometry/Surface.cpp.gcno
        -:    0:Data:/home/kaappo/git/raytracercpp/cmake-build-debug-coverage/CMakeFiles/Main.dir/src/core/geometry/Surface.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by kaappo on 11.9.2021.
        -:    3://
        -:    4:
        -:    5:#include "Surface.h"
        -:    6:#include "../common/mytypes.h"
        -:    7:
        -:    8:
function _ZN7Surface15getIntersectionERK3Ray called 40000 returned 100% blocks executed 57%
    40000:    9:std::optional<Intersection> Surface::getIntersection (const Ray& ray) {
        -:   10://    const Material& material = getMaterial();
    40000:   11:    Surface* hitSurface = nullptr;
    40000:   12:    const Material* hitMaterial = nullptr;
    40000:   13:    auto distance = getIntersectionDistance(ray, hitSurface, hitMaterial);
    40000:   13-block  0
call    0 returned 40000
        -:   14://    std::cout <<" moi" << (hitSurface == nullptr) << std::endl;
        -:   15:
        -:   16:
        -:   17://    std::cout << "Ray: " << ray << std::endl;
   40000*:   18:    if (distance == 0 || distance < 0.001) {
branch  0 taken 0 (fallthrough)
branch  1 taken 40000
    %%%%%:   18-block  0
branch  2 never executed
branch  3 never executed
        -:   19://        std::cout << distance << std::endl;
    40000:   20:        return std::nullopt;
    40000:   20-block  0
        -:   21:    } else {
        -:   22://        std::cout << distance << ", " << ray.apply(distance) << ", " << ray << std::endl;
        -:   23://        return Intersection{distance, ray.apply(distance), *this, ray};
        -:   24:        if (DEBUG) {
        -:   25://            std::cout <<" moi" << *hitMaterial << std::endl;
        -:   26://            std::cout <<" moi" << hitMaterial->get_albedo_at({0.5, 0.5, 0}) << std::endl;
        -:   27:        }
        -:   28:
    #####:   29:        return Intersection{distance, ray.apply(distance), hitSurface, hitMaterial, ray};
    %%%%%:   29-block  0
call    0 never executed
        -:   30:    }
        -:   31:}
        -:   32:
function _ZlsRSoRK7Surface called 0 returned 0% blocks executed 0%
    #####:   33:std::ostream& operator<< (std::ostream& os, const Surface& surface) {
    %%%%%:   33-block  0
call    0 never executed
    #####:   34:    os << "Surface{" << *surface.getMaterial() << "}";
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   35:    return os;
        -:   36:}
