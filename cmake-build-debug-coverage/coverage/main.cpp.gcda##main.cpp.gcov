        -:    0:Source:/home/kaappo/git/raytracercpp/main.cpp
        -:    0:Graph:/home/kaappo/git/raytracercpp/cmake-build-debug-coverage/CMakeFiles/Main.dir/main.cpp.gcno
        -:    0:Data:/home/kaappo/git/raytracercpp/cmake-build-debug-coverage/CMakeFiles/Main.dir/main.cpp.gcda
        -:    0:Runs:1
        -:    1:#include <iostream>
        -:    2:#include <memory>
        -:    3:#include <chrono>
        -:    4:
        -:    5:#include "src/core/interface/MyOpenGLWindow.h"
        -:    6:#include "src/core/light/Intensity.h"
        -:    7:#include "src/core/common/MyVector3.h"
        -:    8:#include "src/core/geometry/Plane.h"
        -:    9:#include "src/core/geometry/Triangle.h"
        -:   10:#include "src/core/engine/Camera.h"
        -:   11:#include "src/core/engine/Scene.h"
        -:   12:#include "src/core/engine/SingleSceneObject.h"
        -:   13:#include "src/core/geometry/Sphere.h"
        -:   14:#include "src/core/light/SmoothLightSource.h"
        -:   15:#include "src/core/engine/SolidTexture.h"
        -:   16:#include "src/core/engine/ImageTexture.h"
        -:   17:#include "src/core/interface/MyOBJLoader.h"
        -:   18:#include "src/core/geometry/Objects.h"
        -:   19:#include "src/core/geometry/BVH.h"
        -:   20:
        -:   21:#define DEBUG
        -:   22:
        -:   23:
function main called 1 returned 100% blocks executed 80%
        1:   24:int main () {
        1:   24-block  0
call    0 returned 1
        -:   25:    constexpr int window_side_length = 1000;
        -:   26:    constexpr int viewport_side_length = 200;
        -:   27:
        -:   28://    Camera camera = {{0, -5, 4}, {0, 0}, 1, {1, 1,}, {viewport_side_length, viewport_side_length}};
        1:   29:    Camera camera = {{0, -5, 8}, {M_PI, 0.5}, 1, {1, 1,}, {viewport_side_length, viewport_side_length}};
        1:   29-block  0
call    0 returned 1
call    1 returned 1
        -:   30:
        -:   31:    auto triangleTexture = std::make_shared<ImageTexture>("../res/texture3.png");
        -:   32://    auto triangleTexture = std::make_shared<ImageTexture>("../res/wood.jpg");
        2:   33:    auto planeTexture = std::make_shared<SolidTexture>(Intensity{1, 1, 1});
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   33-block  0
call    3 returned 1
    $$$$$:   33-block  1
branch  4 never executed
branch  5 never executed
        -:   34:
        -:   35://
        1:   36:    Material triangleMaterial{planeTexture, 0.5};
        1:   36-block  0
call    0 returned 1
        1:   37:    Material sphereMaterial{triangleTexture, 0.5};
        1:   37-block  0
call    0 returned 1
        1:   38:    Material planeMaterial{planeTexture};
        2:   39:    Material mirror{std::make_shared<SolidTexture>(SolidTexture{{1, 1, 1}}), 0};
        1:   39-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   39-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   39-block  2
branch  6 taken 0 (fallthrough)
branch  7 taken 1
    $$$$$:   39-block  3
branch  8 never executed
branch  9 never executed
        -:   40:
        -:   41:    auto triangle = std::make_shared<Triangle>(
        1:   42:            MyVector3{-5, 6, 3},
        1:   43:            MyVector3{0, 0, 3},
        1:   44:            MyVector3{5, 4, 4},
        1:   45:            &triangleMaterial
        1:   45-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   45-block  1
branch  3 never executed
branch  4 never executed
        -:   46:    );
        -:   47:
        1:   48:    auto plane = std::make_shared<Plane>(MyVector3{0, 0, 1}, 20, &planeMaterial);
        1:   48-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   48-block  1
branch  3 never executed
branch  4 never executed
        1:   49:    auto sphere1 = std::make_shared<Sphere>(MyVector3{-2.5, 4, 4.5}, 0.3, &sphereMaterial);
        1:   49-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   49-block  1
branch  3 never executed
branch  4 never executed
        1:   50:    auto sphere2 = std::make_shared<Sphere>(MyVector3{-1, 4, 4.3}, 0.6, &sphereMaterial);
        1:   50-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   50-block  1
branch  3 never executed
branch  4 never executed
        1:   51:    auto sphere3 = std::make_shared<Sphere>(MyVector3{1, 4, 4}, 1.0, &sphereMaterial);
        1:   51-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   51-block  1
branch  3 never executed
branch  4 never executed
        1:   52:    auto sphere4 = std::make_shared<Sphere>(MyVector3{0.5, 2, 3}, 0.5, &sphereMaterial);
        1:   52-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   52-block  1
branch  3 never executed
branch  4 never executed
        1:   53:    auto sphere5 = std::make_shared<Sphere>(MyVector3{-0.75, 2, 3.25}, 0.4, &sphereMaterial);
        1:   53-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   53-block  1
branch  3 never executed
branch  4 never executed
        1:   54:    auto sphere6 = std::make_shared<Sphere>(MyVector3{-0, 6, 6}, 15, &sphereMaterial);
        1:   54-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   54-block  1
call    3 returned 1
    $$$$$:   54-block  2
branch  4 never executed
branch  5 never executed
        -:   55:
        -:   56://    auto surfaces = std::make_shared<Objects>(sur);
        -:   57://    auto test1 = std::make_shared<Sphere>(MyVector3{0, 0, 0}, 1.0, &sphereMaterial);
        -:   58://    auto test2 = std::make_shared<Sphere>(MyVector3{2, 0, 0}, 1.0, &sphereMaterial);
        -:   59://    auto test3 = std::make_shared<Sphere>(MyVector3{20, 0, 0}, 1.0, &sphereMaterial);
        -:   60://    auto test4 = std::make_shared<Sphere>(MyVector3{21, 0, 0}, 1.0, &sphereMaterial);
        -:   61:
        8:   62:    BVHNode tree{{sphere1, sphere2, sphere3, sphere4, sphere5}};
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   62-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        5:   62-block  1
branch  6 taken 5 (fallthrough)
branch  7 taken 0
call    8 returned 1
    $$$$$:   62-block  2
branch  9 never executed
branch 10 never executed
    $$$$$:   62-block  3
branch 11 never executed
branch 12 never executed
    $$$$$:   62-block  4
branch 13 never executed
branch 14 never executed
        1:   63:    std::cout << tree << std::endl;
        1:   63-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   64://    std::exit(0);
        -:   65://    BVHNode tree{{triangle, }};
        -:   66:
        -:   67://    std::exit(0);
        -:   68://    Surface* surface = nullptr;
        -:   69://    Material material = Materials::WHITE;
        -:   70://
        -:   71://    std::cout << tree.getIntersectionDistance({{2, 2, 10}, {0, 0, -1}}, surface, material) << std::endl;
        -:   72://    std::cout << triangle->getIntersectionDistance({{2, 2, 10}, {0, 0, -1}}, surface, material) << std::endl;
        -:   73://    std::exit(0);
       10:   74:    Objects sur = {{sphere1, sphere2, sphere3, sphere4, sphere5, triangle, plane}};
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   74-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        7:   74-block  1
branch  6 taken 7 (fallthrough)
branch  7 taken 0
        1:   74-block  2
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
    $$$$$:   74-block  3
branch 11 never executed
branch 12 never executed
    $$$$$:   74-block  4
branch 13 never executed
branch 14 never executed
    $$$$$:   74-block  5
call   15 never executed
        -:   75:    auto surfaces = std::make_shared<Objects>(sur);
        -:   76:
        1:   77:    auto bloat1 = std::make_shared<Sphere>(MyVector3{-2.5, 4, 5.0}, 0.3, &sphereMaterial);
        1:   77-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   77-block  1
branch  3 never executed
branch  4 never executed
        1:   78:    auto bloat2 = std::make_shared<Sphere>(MyVector3{-100, 4, 4.3}, 0.6, &sphereMaterial);
        1:   78-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   78-block  1
branch  3 never executed
branch  4 never executed
        1:   79:    auto bloat3 = std::make_shared<Sphere>(MyVector3{100, 4, 4}, 1.0, &sphereMaterial);
        1:   79-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   79-block  1
branch  3 never executed
branch  4 never executed
        1:   80:    auto bloat4 = std::make_shared<Sphere>(MyVector3{100, 2, 3}, 0.5, &sphereMaterial);
        1:   80-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   80-block  1
branch  3 never executed
branch  4 never executed
        1:   81:    auto bloat5 = std::make_shared<Sphere>(MyVector3{-75, 2, 3.25}, 0.4, &sphereMaterial);
        1:   81-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   81-block  1
branch  3 never executed
branch  4 never executed
        1:   82:    auto bloat6 = std::make_shared<Sphere>(MyVector3{-100, 6, 6}, 15, &sphereMaterial);
        1:   82-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   82-block  1
call    3 returned 1
    $$$$$:   82-block  2
branch  4 never executed
branch  5 never executed
        -:   83:
        -:   84:    BVHNode testTree{
        -:   85:            {
        -:   86:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:   87:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:   88:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:   89:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:   90:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:   91:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:   92:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:   93:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:   94:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:   95:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:   96:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:   97:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:   98:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:   99:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  100:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  101:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  102:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  103:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  104:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  105:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  106:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  107:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  108:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  109:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  110:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  111:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  112:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  113:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  114:            }
      172:  115:    };
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  115-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
      168:  115-block  1
branch  6 taken 168 (fallthrough)
branch  7 taken 0
        1:  115-block  2
call    8 returned 1
call    9 returned 1
    $$$$$:  115-block  3
branch 10 never executed
branch 11 never executed
    $$$$$:  115-block  4
branch 12 never executed
branch 13 never executed
    $$$$$:  115-block  5
branch 14 never executed
branch 15 never executed
        -:  116:
        -:  117:    Objects testTreeSlo = {
        -:  118:            {
        -:  119:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  120:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  121:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  122:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  123:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  124:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  125:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  126:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  127:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  128:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  129:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  130:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  131:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  132:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  133:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  134:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  135:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  136:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  137:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  138:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  139:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  140:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  141:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  142:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  143:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  144:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  145:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  146:                    bloat1, bloat2, bloat3, bloat4, bloat5, bloat6,
        -:  147:            }
      171:  148:    };
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  148-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
      168:  148-block  1
branch  6 taken 168 (fallthrough)
branch  7 taken 0
        1:  148-block  2
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
    $$$$$:  148-block  3
branch 11 never executed
branch 12 never executed
    $$$$$:  148-block  4
branch 13 never executed
branch 14 never executed
    $$$$$:  148-block  5
call   15 never executed
        -:  149:
        -:  150:    auto testTreeSlow = std::make_shared<Objects>(testTreeSlo);
        -:  151:
        -:  152:////    Sphere sphere2 = {{-1, 4, 4.3}, 0.6};
        -:  153:////    Sphere sphere3 = {{1, 4, 4}, 1};
        -:  154:////    Sphere sphere4 = {{0.5, 2, 3}, 0.5};
        -:  155:////    Sphere sphere5 = {{-0.75, 2, 3.25}, 0.4};
        -:  156://    Sphere sphere6 = {{0, 6, 6}, 1.5};
        -:  157://
        -:  158://
        2:  159:    std::shared_ptr<Surface> model = MyOBJLoader::readOBJ("../res/teapot.obj", {0, 4, 2}, {M_PI / 4, -M_PI / 2}, &Materials::WHITE);
        1:  159-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  159-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  159-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
    $$$$$:  159-block  3
branch  9 never executed
branch 10 never executed
        -:  160://    std::shared_ptr<Surface> model = MyOBJLoader::readOBJ("../res/texture.obj", MyVector3{0, 0, 3});
        -:  161://    std::cout << *dynamic_cast<BVHNode*>(model.get()) << std::endl;
        -:  162://
        -:  163://
        -:  164://
        -:  165:    std::vector<Surface*> objects = {
        -:  166:
        -:  167://            sphere1.get(),
        -:  168://            sphere2.get(),
        -:  169://            surfaces.get(),
        -:  170://            plane.get(),
        -:  171://            triangle.get(),
        -:  172://            &tree,
        -:  173:            model.get(),
        -:  174://            &testTree,
        -:  175://            testTreeSlow.get(),
        -:  176://            surfaces.get(),
        -:  177://            model.get(),
        -:  178://            SingleSceneObject{triangle.get(), triangleMaterial},
        -:  179://            SingleSceneObject{plane.get(), planeMaterial},
        -:  180://            SingleSceneObject(sphere1.get(), sphereMaterial),
        -:  181://            SingleSceneObject(sphere2.get(), sphereMaterial),
        -:  182://            SingleSceneObject(sphere3.get(), sphereMaterial),
        -:  183://            SingleSceneObject(sphere4.get(), sphereMaterial),
        -:  184://            SingleSceneObject(sphere5.get(), sphereMaterial),
        -:  185:////            SingleSceneObject(sphere6, mirror),
        1:  186:    };
        1:  186-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:  186-block  1
branch  3 never executed
branch  4 never executed
        -:  187:
        -:  188:    double radius = 0;
        -:  189:    std::vector<LightSource> lights = {
        1:  190:            {{4,     0,  4},   Intensity{0.1, 0.1, 1} * 70, radius * 7},
        1:  190-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  191:            {{-4,    4.5,  5.5}, Intensity{1, 0.25, 1} * 30,  radius * 3},
        1:  191-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  192://            {{-0.12, 3.83, 3.9}, Intensity{1, 1, 0.25} * 1,   radius},
        1:  193:            {{10, -40, 40}, Intensity{1, 1, 0.8} * 400, radius * 100},
        1:  193-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        4:  194:    };
        1:  194-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  194-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  194-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  194-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
    $$$$$:  194-block  4
branch 12 never executed
branch 13 never executed
        -:  195:
        -:  196:
        -:  197://    objects.insert(std::end(objects), std::begin(model), std::end(model));
        -:  198://    std::cout << objects.size() << std::endl;
        -:  199:
        -:  200:
        -:  201:
        2:  202:    Scene scene = {objects, lights, camera, 1, 1};
        1:  202-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
    $$$$$:  202-block  1
call    4 never executed
        -:  203:
        2:  204:    MyOpenGLWindow window = {window_side_length, window_side_length, 2, window_side_length / viewport_side_length};
        1:  204-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  204-block  1
call    3 returned 1
    $$$$$:  204-block  2
call    4 never executed
        -:  205:
        -:  206:#pragma clang diagnostic push
        -:  207:#pragma ide diagnostic ignored "EndlessLoop"
        -:  208:    while (true) {
        -:  209:        std::cout << "starting tracing!" << std::endl;
        1:  210:        auto start = std::chrono::system_clock::now();
        1:  210-block  0
call    0 returned 1
        1:  211:        auto pixels = scene.trace(5);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  212:
        1:  213:        auto end = std::chrono::system_clock::now();
        1:  213-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        -:  214:        std::cout << "traced" << std::endl;
        -:  215:
        -:  216:        std::chrono::duration<double> elapsed_seconds = end - start;
        1:  217:        std::time_t end_time = std::chrono::system_clock::to_time_t(end);
        1:  217-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  218:
        1:  219:        std::cout << "finished computation at " << std::ctime(&end_time) << "elapsed time: " << elapsed_seconds.count() << " s" << std::endl;
        1:  219-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        -:  220:
        -:  221:
        1:  222:        window.paint(pixels);
        1:  222-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  222-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  222-block  2
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
    $$$$$:  222-block  3
call   10 never executed
        -:  223://        camera.setViewplaneDistance(camera.getViewplaneDistance() * 1.01);
        -:  224://        camera.move({0, 0.1, 0.1});
        1:  225:        camera.move({0, 0, 0});
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  225-block  0
call    3 returned 1
    $$$$$:  225-block  1
call    4 never executed
        -:  226://        window.delay(50);
        -:  227:        break;
        -:  228:    }
        -:  229:#pragma clang diagnostic pop
        -:  230://    while (true);
        1:  231:    SDL_Quit();
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  232:
        -:  233:    return 0;
        -:  234:}
